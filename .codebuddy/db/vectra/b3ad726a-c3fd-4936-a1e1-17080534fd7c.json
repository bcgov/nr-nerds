{"chunk":6,"numChunks":9,"fileHash":"1SMexQV3/cYUvQLjmTK3+MQPM8qNRYE/0C/GkyotcYE=","filePath":"project-board-sync/src/rules/processors/validation.js","content":"/**\nclass RuleValidation {\n    validateItemCondition(item, condition) {\n        try {\n            // Type validation\n            if (condition.type) {\n                if (Array.isArray(condition.type)) {\n                    // Handle array of types (e.g., [\"PullRequest\", \"Issue\"])\n                    if (!condition.type.includes(item.__typename)) {\n                        log.debug(`Type mismatch: ${item.__typename} not in ${JSON.stringify(condition.type)}`);\n                        return false;\n                    }\n                } else {\n                    // Handle single type (e.g., \"PullRequest\")\n                    if (item.__typename !== condition.type) {\n                        log.debug(`Type mismatch: ${item.__typename} !== ${condition.type}`);\n                        return false;\n                    }\n                }\n            }\n            // New monitored users condition\n            if (condition.condition === \"monitored.users.includes(item.author)\") {\n                const result = this.monitoredUsers.has(item.author?.login);\n                log.debug(`Monitored users check: ${item.author?.login} in monitored users -> ${result}`);\n                return result;\n            }\n            // Repository condition - NEW\n            if (condition.condition === \"monitored.repos.includes(item.repository)\") {\n                const result = this.monitoredRepos.has(item.repository?.nameWithOwner);\n                log.debug(`Repository check: ${item.repository?.nameWithOwner} in monitored repos -> ${result}`);\n                return result;\n            }\n            // New monitored users assignee condition\n            if (condition.condition === \"item.assignees.some(assignee => monitored.users.includes(assignee))\") {\n                const result = item.assignees?.nodes?.some(a => this.monitoredUsers.has(a.login)) || false;\n                log.debug(`Monitored users assignee check: ${item.assignees?.nodes?.map(a => a.login).join(', ')} includes monitored user -> ${result}`);\n                return result;\n            }\n            // Column condition - NEW"}