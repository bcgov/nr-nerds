{"chunk":9,"numChunks":11,"fileHash":"a4eyBkBTxsL40WZWrTqbpDNUNOIcSq/nqd3+tEGtmMs=","filePath":"project-board-sync/src/config/__tests__/loader.test.js","content":"const { test } = require('node:test');\ntest('ConfigLoader', async (t) => {\n  await t.test('loads valid config from rules.yml', async () => {\n    const loader = new ConfigLoader();\n    const config = loader.load(path.join(__dirname, '../../../config/rules.yml'));\n    // Basic structure checks - no version field in new structure\n    assert.ok(config.project, 'has project section');\n    assert.ok(config.automation, 'has automation section');\n    assert.ok(config.technical, 'has technical section');\n    // Project settings\n    assert.equal(config.project.id, 'PVT_kwDOAA37OM4AFuzg', 'correct project ID');\n    // Automation structure\n    assert.ok(config.automation.user_scope, 'has user_scope');\n    assert.ok(config.automation.user_scope.monitored_users, 'has monitored_users');\n    assert.ok(Array.isArray(config.automation.user_scope.monitored_users), 'monitored_users is an array');\n    assert.ok(config.automation.user_scope.monitored_users.length > 0, 'has at least one monitored user');\n    assert.ok(config.automation.user_scope.monitored_users.includes('DerekRoberts'), 'includes DerekRoberts');\n    assert.ok(config.automation.repository_scope, 'has repository_scope');\n    assert.equal(config.automation.repository_scope.organization, 'bcgov', 'correct organization');\n    assert.ok(Array.isArray(config.automation.repository_scope.repositories), 'has repository list');\n    assert.ok(config.automation.repository_scope.repositories.includes('nr-nerds'), 'includes current repo');\n    // After normalization through loadBoardRules, check merged rules\n    const { loadBoardRules } = require('../board-rules');\n    const normalizedConfig = loadBoardRules();\n    const ruleSections = Object.keys(normalizedConfig.rules);\n    for (const section of ruleSections) {\n      assert.ok(Array.isArray(normalizedConfig.rules[ section ]), `has ${section} rules`);\n      assert.ok(normalizedConfig.rules"}