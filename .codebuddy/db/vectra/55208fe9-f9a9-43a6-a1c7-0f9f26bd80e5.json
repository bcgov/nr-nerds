{"chunk":2,"numChunks":6,"fileHash":"sGVMaJfcIDJOAwVasOyV2qc6sqjWFDAPwLbva694AYc=","filePath":"project-board-sync/src/utils/log.js","content":"/**\nclass Logger {\n  constructor() {\n    this.logs = {\n      errors: [],\n      warnings: [],\n      infos: [],\n      unchanged: [],\n      skipped: [],\n      debugs: [],\n      states: [] // Add states tracking\n    };\n  }\n  error(message) {\n    const fullMessage = message instanceof Error ? message.stack || message.message : message;\n    this.logs.errors.push(fullMessage);\n    console.error(`ERROR: ${fullMessage}`);\n  }\n  warning(message) {\n    const fullMessage = message instanceof Error ? message.message : message;\n    this.logs.warnings.push(fullMessage);\n    console.warn(`WARNING: ${fullMessage}`);\n  }\n  unchanged(message, details = {}) {\n    const logEntry = { message, timestamp: new Date(), ...details };\n    this.logs.unchanged.push(logEntry);\n    console.log(`UNCHANGED: ${message}`);\n  }\n  skipped(message, details = {}) {\n    const logEntry = { message, timestamp: new Date(), ...details };\n    this.logs.skipped.push(logEntry);\n    console.log(`SKIPPED: ${message}`);\n  }\n  info(message, raw = false) {\n    this.logs.infos.push(message);\n    console.log(raw ? message : `INFO: ${message}`);\n  }\n  debug(message, raw = false) {\n    if (process.env.DEBUG) {\n      this.logs.debugs.push(message);\n      console.log(raw ? message : `DEBUG: ${message}`);\n    }\n  }\n  /**\n   * Log the state of an item for comparison\n   * @param {string} itemId The GitHub node ID of the item\n   * @param {string} context Description of when this state was captured (e.g., 'Before Update')\n   * @param {Object} state The current state of the item\n   */"}