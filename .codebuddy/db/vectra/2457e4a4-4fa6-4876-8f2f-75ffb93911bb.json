{"chunk":1,"numChunks":7,"fileHash":"C3p/lasysMy4RYnI/pWYiJsbVZnjjjhrj1Zu/ODsi/I=","filePath":"project-board-sync/src/rules/sprints.js","content":"const { octokit } = require('../github/api');\nasync function getCurrentSprint(projectId) {\n  const today = new Date().toISOString();\n  log.info('Getting current sprint:');\n  log.info(`  • Current date: ${today}`);\n  \n  const result = await octokit.graphql(`\n    query($projectId: ID!) {\n      node(id: $projectId) {\n        ... on ProjectV2 {\n          field(name: \"Sprint\") {\n            ... on ProjectV2IterationField {\n              id\n              configuration {\n                iterations {\n                  id\n                  title\n                  duration\n                  startDate\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `, { projectId });\n\n  const iterations = result?.node?.field?.configuration?.iterations || [];\n  log.info(`  • Found ${iterations.length} sprints`);\n  \n  const currentSprint = iterations.find(sprint => {\n    const start = new Date(sprint.startDate);\n    const end = new Date(start);\n    end.setDate(end.getDate() + sprint.duration);\n    const now = new Date();\n    const isCurrentSprint = now >= start && now < end;\n    log.debug(`  • Sprint \"${sprint.title}\": ${start.toISOString()} to ${end.toISOString()} - ${isCurrentSprint ? 'CURRENT' : 'not current'}`);\n    return isCurrentSprint;\n  });\n\n  if (!currentSprint) {\n    log.warning('  • No active sprint found matching current date');\n    throw new Error('No active sprint found');\n  }\n\n  log.info(`  • Current sprint: ${currentSprint.title} (${currentSprint.id})`);\n  return {\n    sprintId: currentSprint.id,\n    title: currentSprint.title\n  };\n}"}