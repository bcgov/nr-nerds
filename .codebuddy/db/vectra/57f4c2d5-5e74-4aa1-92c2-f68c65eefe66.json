{"chunk":0,"numChunks":1,"fileHash":"FKoIf4FqHZGbDSfjTXq/sWKlehJJl0wqss/lHjg6N/s=","filePath":"project-board-sync/scripts/inspect-user-fields.js","content":"// Utility script to inspect GitHub GraphQL schema for user fields\nconst { octokit } = require('../src/github/api');\n\nasync function inspectUserFields() {\n  try {\n    // Try to get more information about fields that can be used with users\n    const result = await octokit.graphql(`\n      query {\n        __schema {\n          types {\n            name\n            description\n            kind\n            fields {\n              name\n              description\n            }\n          }\n        }\n      }\n    `);\n    \n    // Filter for types related to users and projects\n    const userRelatedTypes = result.__schema.types.filter(type => \n      type.name && \n      (type.name.includes('User') || type.name.includes('Assignee') || \n       type.name.includes('ProjectV2') && type.name.includes('Field'))\n    );\n    \n    console.log('User and Project Field Types:');\n    userRelatedTypes.forEach(type => {\n      console.log(`\\n${type.name}: ${type.description || 'No description'}`);\n      if (type.fields) {\n        type.fields.forEach(field => {\n          console.log(`  - ${field.name}: ${field.description || 'No description'}`);\n        });\n      }\n    });\n    \n  } catch (error) {\n    console.error('Error inspecting user fields:', error.message);\n  }\n}\n\ninspectUserFields();\n"}