{"chunk":8,"numChunks":11,"fileHash":"iryITuluPn/vn6C5euMmHgZJ70l+KgjHugtgCqDKIio=","filePath":"project-board-sync/src/rules/processors/__tests__/repository-rules.test.js","content":"const { test } = require('node:test');\ntest('PR/Issue from monitored repository rule', async (t) => {\n    t.beforeEach(() => {\n        // Mock dependencies using require.cache\n        const sharedValidatorPath = require.resolve('../shared-validator');\n        const boardRulesPath = require.resolve('../../../config/board-rules');\n        const logPath = require.resolve('../../../utils/log');\n        require.cache[sharedValidatorPath] = {\n            exports: {\n                validator: {\n                    validateItemCondition: (item, trigger) => {\n                        if (trigger.condition === 'item.repository === monitored.repository') {\n                            return item.repository?.name === process.env.GITHUB_REPOSITORY;\n                        }\n                        return false;\n                    },\n                    validateSkipRule: (item, skipIf) => {\n                        if (skipIf === \"item.inProject\") {\n                            return item.projectItems?.nodes?.length > 0;\n                        }\n                        return false;\n                    },\n                    steps: {\n                        markStepComplete: (step) => {\n                            // Mock implementation\n                        }\n                    }\n                }\n            }\n        };\n        require.cache[boardRulesPath] = {\n            exports: {\n                loadBoardRules: () => ({\n                    rules: {\n                        board_items: [{\n                            name: \"Items from Repository\",\n                            description: \"Add items from monitored repository\",\n                            trigger: {\n                                type: \"PullRequest|Issue\",\n                                condition: \"item.repository === monitored.repository\"\n                            },\n                            action: \"add_to_board\",\n                            skip_if: \"item.inProject\"\n                        }]\n                    }\n                })\n            }\n        };\n        require.cache[logPath] = {\n            exports: {\n                log: {\n                    info: (msg) => logMessages.push(msg),\n                    debug: (msg) => logMessages.push(msg),\n                    error: (msg) => logMessages.push(msg)\n                }\n            }\n        };\n        // Set test environment\n        process.env.GITHUB_REPOSITORY = 'test-repo';\n        //"}