{"chunk":4,"numChunks":10,"fileHash":"HPT/Ndg6W9FqXJZb751xMISbzyEQOGaKyGUEVxk0MX8=","filePath":"project-board-sync/test/state-transition-validator.test.js","content":"const { test } = require('node:test');\ntest('StateTransitionValidator', async (t) => {\n  await t.test('validates simple column transitions', async () => {\n    const validator = new StateTransitionValidator();\n    \n    // Complete all required steps in correct order\n    validator.steps.markStepComplete('CONFIG_LOADED');\n    validator.steps.markStepComplete('DEPENDENCIES_VERIFIED');\n    validator.steps.markStepComplete('RULES_VALIDATED');\n    validator.steps.markStepComplete('CONDITIONS_DOCUMENTED');\n    validator.steps.markStepComplete('TRANSITION_VALIDATED');\n    \n    // Set up rules\n    validator.addColumnTransitionRule('Backlog', 'Active', []);\n    validator.addColumnTransitionRule('Active', 'Review', ['item.hasReviewers']);\n    validator.addColumnTransitionRule('Review', ['Done', 'Blocked'], []);\n    \n    // Test valid transitions\n    const validResult = validator.validateColumnTransition('Backlog', 'Active');\n    assert.equal(validResult.valid, true, 'Should allow valid transition');\n    \n    // Test invalid transitions\n    const invalidResult = validator.validateColumnTransition('Backlog', 'Done');\n    assert.equal(invalidResult.valid, false, 'Should reject invalid transition');\n    assert.equal(\n      invalidResult.reason,\n      'Transition from \"Backlog\" to \"Done\" is not allowed',\n      'Should explain rejection reason'\n    );\n    \n    // Test condition evaluation\n    const noReviewersResult = validator.validateColumnTransition(\n      'Active',\n      'Review',\n      { item: { hasReviewers: false } }\n    );\n    assert.equal(noReviewersResult.valid, false, 'Should reject when conditions not met');\n    \n    const hasReviewersResult = validator.validateColumnTransition(\n      'Active',\n      'Review',\n      { item: { hasReviewers: true } }\n    );\n    assert.equal(hasReviewersResult.valid, true, 'Should allow when conditions met');\n  });"}