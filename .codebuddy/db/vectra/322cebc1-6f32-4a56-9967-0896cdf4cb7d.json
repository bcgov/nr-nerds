{"chunk":8,"numChunks":10,"fileHash":"kYoYh4Mn0jAd2e8hiHojmvx60OErgciJ5WvzI8wa3jg=","filePath":"project-board-sync/src/rules/processors/__tests__/single-rule.test.js","content":"// Ensure test runner is available\ntest('PR authored by monitored user rule', async (t) => {\n    t.beforeEach(() => {\n        // Mock our dependencies\n        const { loadBoardRules } = require('../../../config/board-rules');\n        // Set up environment with config values\n        process.env.GITHUB_AUTHOR = 'DerekRoberts';\n        // Set up fake module cache for mocks\n        const validatorPath = require.resolve('../shared-validator');\n        const rulesPath = require.resolve('../../../config/board-rules');\n        const logPath = require.resolve('../../../utils/log');\n        require.cache[ validatorPath ] = {\n            exports: {\n                validator: {\n                    validateItemCondition: (item, trigger) => {\n                        if (trigger.condition === 'monitored.users.includes(item.author)') {\n                            return item.author?.login === process.env.GITHUB_AUTHOR;\n                        }\n                        return false;\n                    },\n                    validateSkipRule: (item, skipIf) => {\n                        if (skipIf === \"item.inProject\") {\n                            return item.projectItems?.nodes?.length > 0;\n                        }\n                        return false;\n                    },\n                    steps: {\n                        markStepComplete: (step) => {\n                            // Mock implementation\n                        }\n                    }\n                }\n            }\n        };\n        require.cache[ rulesPath ] = {\n            exports: {\n                loadBoardRules: () => ({\n                    rules: {\n                        board_items: [ {\n                            name: \"PullRequest by Author\",\n                            description: \"Add pull requests authored by monitored user\",\n                            trigger: {\n                                type: \"PullRequest\",\n                                condition: \"monitored.users.includes(item.author)\"\n                            },\n                            action: \"add_to_board\",\n                            skip_if: \"item.inProject\"\n                        } ]\n                    },\n                    monitoredUsers: ['DerekRoberts']\n                })\n            }\n        };"}