{"chunk":5,"numChunks":9,"fileHash":"hpOeWWIAZvnab09d0lSRqhqVpMCI1iVzBWQv3hmbhIQ=","filePath":"project-board-sync/src/rules/columns.js","content":"const { getItemColumn, setItemColumn, isItemInProject, octokit } = require('../github/api');\nasync function processColumnAssignment(item, projectItemId, projectId) {\n  try {\n    // First get available columns\n    const options = await getColumnOptions(projectId);\n    // Get current column\n    const currentColumn = await getItemColumn(projectId, projectItemId);\n    const currentColumnLower = currentColumn ? currentColumn.toLowerCase() : null;\n    let targetColumn = null;\n    let reason = '';\n    log.info(`Processing column rules for ${item.__typename} #${item.number}:`, true);\n    log.info(`  • Current column: ${currentColumn || 'None'}`, true);\n    log.info(`  • Item type: ${item.__typename}`, true);\n    log.info(`  • Item state: ${item.state || 'Unknown'}`, true);\n    // Skip if item is closed/merged and already in Done column\n    if ((item.state === 'CLOSED' || item.state === 'MERGED') && currentColumnLower === 'done') {\n      log.info('  • Rule: Item is closed/merged and in Done column → Skipping', true);\n      return {\n        changed: false,\n        reason: 'Column already set to Done by GitHub automation',\n        currentStatus: currentColumn\n      };\n    }\n    // Skip if item is closed/merged (GitHub handles these)\n    if (item.state === 'CLOSED' || item.state === 'MERGED') {\n      log.info('  • Rule: Item is closed/merged → GitHub handles column', true);\n      return {\n        changed: false,\n        reason: `Column handled by GitHub automation for ${item.state.toLowerCase()} items`,\n        currentStatus: currentColumn\n      };\n    }\n    // Handle PRs and Issues according to requirements"}