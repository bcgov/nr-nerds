{"chunk":7,"numChunks":10,"fileHash":"JyGXkSXfqfji/jvY1IWvGDwkrzgkd6gnhZdRmuKn98M=","filePath":"project-board-sync/src/rules/add-items.js","content":"const { isItemInProject, addItemToProject, getRecentItems } = require('../github/api');\nasync function processAddItems({ org, repos, monitoredUser, projectId }) {\n  for (const item of items) {\n    try {\n      const addReason = item.__typename === 'PullRequest'\n        ? isAuthoredByUser\n          ? 'PR is authored by monitored user'\n          : isAssignedToUser\n            ? 'PR is assigned to monitored user'\n            : isMonitoredRepo\n              ? 'PR is in a monitored repository'\n              : 'PR does not meet any criteria'\n        : isMonitoredRepo\n          ? 'Issue is in a monitored repository'\n          : 'Issue does not meet any criteria';\n      if (!shouldProcess) {\n        skippedItems.push({\n          type: item.__typename,\n          number: item.number,\n          repo: item.repository.nameWithOwner,\n          reason: addReason\n        });\n        log.info(`  тип Action Required: Skip - ${addReason}\\n`, true);\n        continue;\n      }\n      // Check if in project and get project item ID\n      log.info('  Checking project board status...', true);\n      const { isInProject, projectItemId: existingItemId } = await isItemInProject(item.id, projectId);\n      let projectItemId = existingItemId;\n      // Process all board actions\n      log.info('\\n  Processing board actions:', true);"}