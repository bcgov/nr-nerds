{"chunk":4,"numChunks":5,"fileHash":"AGFeFrU3yIulZRrpSKOeMwuQumlGfeETsSMbBZu4jdU=","filePath":"project-board-sync/src/rules/processors/__tests__/sprint-rules.test.js","content":"const { test } = require('node:test');\ntest('processSprintRules', async (t) => {\n    // Setup test environment\n    setupTestEnvironment();\n    await t.test('sets sprint when PR is in Active column', async () => {\n        const pr = {\n            __typename: 'PullRequest',\n            author: { login: 'DerekRoberts' },\n            column: 'Active',\n            sprint: null,\n            projectItems: {\n                nodes: []\n            }\n        };\n\n        const actions = await processSprintRules(pr);\n        \n        assert.equal(actions.length, 1, 'should set sprint');\n        assert.equal(actions[0].action, 'set_sprint: current', 'should set to current sprint');\n        assert.equal(actions[0].params.item, pr, 'should include PR in params');\n    });\n    await t.test('sets sprint when Issue is in Next column', async () => {\n        const issue = {\n            __typename: 'Issue',\n            author: { login: 'DerekRoberts' },\n            column: 'Next',\n            sprint: null,\n            projectItems: {\n                nodes: []\n            }\n        };\n\n        const actions = await processSprintRules(issue);\n        \n        assert.equal(actions.length, 1, 'should set sprint');\n        assert.equal(actions[0].action, 'set_sprint: current', 'should set to current sprint');\n        assert.equal(actions[0].params.item, issue, 'should include Issue in params');\n    });"}