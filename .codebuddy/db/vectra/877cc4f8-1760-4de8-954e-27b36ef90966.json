{"chunk":4,"numChunks":5,"fileHash":"FMxEEryGSNJRhTM7AQ0K3tHT1LxUl9xbsJrx86caIUc=","filePath":"project-board-sync/src/rules/processors/__tests__/column-rules.test.js","content":"const { test } = require('node:test');\ntest('processColumnRules', async (t) => {\n    // Setup test environment\n    setupTestEnvironment();\n    const config = await loadBoardRules();\n    const monitoredUser = config.monitoredUser;\n    await t.test('sets PR column to Active when no column set', async () => {\n        const pr = {\n            __typename: 'PullRequest',\n            author: { login: monitoredUser },\n            column: null, // No column set\n            projectItems: {\n                nodes: []\n            }\n        };\n\n        const actions = await processColumnRules(pr);\n\n        assert.equal(actions.length, 1, 'should set column');\n        assert.equal(actions[ 0 ].action, 'set_column: Active', 'should set to Active');\n        assert.equal(actions[ 0 ].params.item, pr, 'should include PR in params');\n    });\n    await t.test('sets PR column to Active when in New column', async () => {\n        const pr = {\n            __typename: 'PullRequest',\n            author: { login: monitoredUser },\n            column: 'New', // In New column\n            projectItems: {\n                nodes: []\n            }\n        };\n\n        const actions = await processColumnRules(pr);\n\n        assert.equal(actions.length, 1, 'should set column');\n        assert.equal(actions[ 0 ].action, 'set_column: Active', 'should set to Active');\n        assert.equal(actions[ 0 ].params.item, pr, 'should include PR in params');\n    });"}