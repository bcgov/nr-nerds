{"chunk":7,"numChunks":31,"fileHash":"d/sfK61LpWfXclxI64CLwQIr+HeWHt3JRwU/EIB4ZQc=","filePath":"project-board-sync/src/utils/state-verifier.js","content":"/**\nclass StateVerifier {\n  static async verifyColumn(item, projectId, expectedColumn) {\n    const beforeState = this.getState(item);\n\n    // Validate the transition before attempting it\n    const validationResult = this.getTransitionValidator().validateColumnTransition(\n      beforeState.column,\n      expectedColumn,\n      { item }\n    );\n\n    if (!validationResult.valid) {\n      throw new Error(`Invalid column transition: ${validationResult.reason}`);\n    }\n\n    return this.retryWithTracking(\n      item,\n      'Column Verification',\n      async (attempt) => {\n        const currentColumn = await getItemColumn(projectId, item.projectItemId);\n        const afterState = this.updateState(item, { column: currentColumn });\n\n        this.tracker.recordChange(\n          item,\n          'Column Verification',\n          beforeState,\n          afterState,\n          attempt\n        );\n\n        if (currentColumn?.toLowerCase() !== expectedColumn?.toLowerCase()) {\n          throw new Error(`Column mismatch for ${item.type} #${item.number}:\nExpected: \"${expectedColumn}\"\nCurrent: \"${currentColumn}\"`);\n        }\n\n        verifierLog.info(`âœ“ Column verified: \"${expectedColumn}\" (attempt ${attempt}/3)`);\n        return afterState;\n      },\n      `column state for ${item.type} #${item.number}`\n    );\n  }"}