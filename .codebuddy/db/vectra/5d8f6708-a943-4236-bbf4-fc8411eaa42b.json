{"chunk":13,"numChunks":14,"fileHash":"BR3KeY/jHTO4rmaSfUa3V5AEhCmP6zXL1SL7tJnnCcM=","filePath":"project-board-sync/src/rules/processors/__tests__/unified-rule-processor.test.js","content":"const { test } = require('node:test');\ntest('Unified Rule Processor - All Rule Types', async (t) => {\n    await t.test('skips rules when skip condition is met', async () => {\n        const item = {\n            __typename: 'PullRequest',\n            number: 123,\n            column: 'Active', // Already has column\n            projectItems: { nodes: [] }\n        };\n\n        const actions = await processRuleType(item, 'columns');\n        \n        assert.equal(actions.length, 0, 'Should skip when column already set');\n    });\n    await t.test('skips sprint rules when sprint already set', async () => {\n        const item = {\n            __typename: 'PullRequest',\n            number: 123,\n            column: 'Active',\n            sprint: 'current', // Already has sprint\n            projectItems: { nodes: [] }\n        };\n\n        const actions = await processRuleType(item, 'sprints');\n        \n        assert.equal(actions.length, 0, 'Should skip when sprint already set');\n    });\n    await t.test('skips assignee rules when assignee already set', async () => {\n        const item = {\n            __typename: 'PullRequest',\n            number: 123,\n            author: { login: 'test-user' },\n            assignees: { nodes: [{ login: 'test-user' }] }, // Already has assignee\n            projectItems: { nodes: [] }\n        };\n\n        const actions = await processRuleType(item, 'assignees');\n        \n        assert.equal(actions.length, 0, 'Should skip when assignee already set');\n    });"}