{"chunk":4,"numChunks":11,"fileHash":"pU2zJJcqjRS6lW9oTfu/r1to7SLWkYMY0S5Sf/l3wbo=","filePath":"project-board-sync/src/github/api.js","content":"const { Octokit } = require('@octokit/rest');\nasync function addItemToProject(nodeId, projectId) {\n  const result = await graphqlWithAuth(`\n    mutation($projectId: ID!, $contentId: ID!) {\n      addProjectV2ItemById(input: {\n        projectId: $projectId,\n        contentId: $contentId\n      }) {\n        item {\n          id\n        }\n      }\n    }\n  `, {\n    projectId,\n    contentId: nodeId\n  });\n\n  if (!result.addProjectV2ItemById?.item?.id) {\n    throw new Error('Failed to add item to project - missing item ID in response');\n  }\n\n  return result.addProjectV2ItemById.item.id;\n}\n/**\n * Get recent items (PRs and Issues) from monitored repositories and authored by monitored user\n * @param {string} org - Organization name\n * @param {Array<string>} repos - List of repository names\n * @param {string} monitoredUser - GitHub username to monitor\n * @returns {Promise<Array>} - List of items (PRs and Issues)\n */"}