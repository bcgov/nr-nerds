{"chunk":5,"numChunks":6,"fileHash":"sGVMaJfcIDJOAwVasOyV2qc6sqjWFDAPwLbva694AYc=","filePath":"project-board-sync/src/utils/log.js","content":"/**\nclass Logger {\n  printStateSummary() {\n    console.log('\\nState Changes Summary:');\n    const uniqueItems = [...new Set(this.logs.states.map(s => s.itemId))];\n    \n    for (const itemId of uniqueItems) {\n      const changes = this.getStateChanges(itemId);\n      if (changes) {\n        console.log(`\\nItem ${itemId} changes:`);\n        Object.entries(changes).forEach(([field, {from, to}]) => {\n          console.log(`  ${field}: ${JSON.stringify(from)} → ${JSON.stringify(to)}`);\n        });\n      }\n    }\n  }\n  printSummary() {\n    console.log('\\n📊 Execution Summary');\n    console.log('══════════════════\\n');\n    \n    const stats = {\n      total: this.logs.infos.length + this.logs.unchanged.length + this.logs.skipped.length,\n      errors: this.logs.errors.length,\n      warnings: this.logs.warnings.length,\n      unchanged: this.logs.unchanged.length,\n      skipped: this.logs.skipped.length,\n      stateChanges: this.logs.states.length\n    };\n    \n    console.log(`Total Items Processed: ${stats.total}`);\n    console.log(`├─ State Changes: ${stats.stateChanges}`);\n    console.log(`├─ Unchanged: ${stats.unchanged}`);\n    console.log(`├─ Skipped: ${stats.skipped}`);\n    console.log(`├─ Errors: ${stats.errors}`);\n    console.log(`└─ Warnings: ${stats.warnings}\\n`);\n\n    // Print state changes if any\n    if (this.logs.states.length > 0) {\n      console.log('🔄 State Changes:');\n      this.printStateSummary();\n    }\n\n    if (this.logs.errors.length > 0) {\n      console.log('\\n❌ Errors:');\n      this.logs.errors.forEach(msg => console.log(`- ${msg}`));\n    }\n  }"}