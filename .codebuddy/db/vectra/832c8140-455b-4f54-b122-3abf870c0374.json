{"chunk":0,"numChunks":1,"fileHash":"BGktHGIwEsz/uVwYICJLB28hnodhth/YVmejhm/DllA=","filePath":"project-board-sync/scripts/validate.js","content":"#!/usr/bin/env node\n\n/**\n * @fileoverview Consolidated validation script\n * Integrates all validation, testing and config checks into one command\n */\n\nconst { ValidationRunner } = require('../src/utils/validation-runner');\n\nasync function main() {\n  console.log('Running project validations...\\n');\n  \n  const result = await ValidationRunner.runValidations({\n    validateState: true\n  });\n\n  if (result.success) {\n    console.log('\\nValidation Summary:');\n    if (result.results.environment) console.log('✓ Environment validation passed');\n    if (result.results.config) console.log('✓ Configuration validation passed');\n    if (result.results.state) console.log('✓ State tracking validation passed');\n    \n    // Print detailed reports\n    ValidationRunner.printReports();\n    \n    console.log('\\n✅ All validations passed! Safe to deploy.');\n    process.exit(0);\n  } else {\n    console.error('\\n❌ Validation failed:', result.error);\n    \n    // Print validation state\n    console.error('\\nValidation State:');\n    if (!result.results.environment) console.error('✗ Environment validation failed');\n    if (!result.results.config) console.error('✗ Configuration validation failed');  \n    if (!result.results.state) console.error('✗ State tracking validation failed');\n    \n    process.exit(1);\n  }\n}\n\n// Run if called directly\nif (require.main === module) {\n  main().catch(error => {\n    console.error(error);\n    process.exit(1);\n  });\n}\n"}