{"chunk":4,"numChunks":6,"fileHash":"/fglbAKqV+HsiktehwwJomF9L+DQLx85q5xa1/JmU5Y=","filePath":"project-board-sync/test/validation/environment.test.js","content":"const { test } = require('node:test');\ntest('environment validation', async (t) => {\n  const originalEnv = { ...process.env };\n  const config = await loadBoardRules();\n  t.afterEach(() => {\n    process.env = { ...originalEnv };\n  });\n  await t.test('accepts valid environment with required variables', async () => {\n    process.env.GITHUB_TOKEN = 'test-token';\n    process.env.GITHUB_AUTHOR = config.monitoredUser;\n    process.env.PROJECT_ID = 'test-project';\n    \n    try {\n      await validateEnvironment();\n      assert(true, 'Should not throw with valid environment');\n    } catch (error) {\n      // Expected to fail due to invalid token, but should not fail due to missing variables\n      assert(!error.message.includes('Missing required environment variables'), 'Should not fail due to missing variables');\n    }\n  });\n  await t.test('accepts valid environment with default project ID', async () => {\n    process.env.GITHUB_TOKEN = 'test-token';\n    process.env.GITHUB_AUTHOR = config.monitoredUser;\n    delete process.env.PROJECT_ID;\n    \n    try {\n      await validateEnvironment();\n      assert(true, 'Should not throw with default project ID');\n    } catch (error) {\n      // Expected to fail due to invalid token, but should not fail due to missing PROJECT_ID\n      assert(!error.message.includes('PROJECT_ID'), 'Should not fail due to missing PROJECT_ID');\n    }\n  });"}