{"chunk":5,"numChunks":6,"fileHash":"ekR43t/QtJIDB8YpwJyfHxWPLbmeXF1vyovB0cCsvtc=","filePath":"project-board-sync/test/url-resolution.test.js","content":"const test = require('node:test');\ntest('URL resolution functionality', async (t) => {\n  if (process.env.GITHUB_TOKEN) {\n    try {\n      // This will only work if we have access to the actual project\n      // For now, we'll just test that the method exists and has the right signature\n      assert(typeof EnvironmentValidator.resolveProjectFromUrl === 'function', \n        'resolveProjectFromUrl method should exist');\n      \n      // Test that it throws for invalid URLs\n      try {\n        await EnvironmentValidator.resolveProjectFromUrl('invalid-url');\n        assert.fail('Should throw error for invalid URL');\n      } catch (error) {\n        assert(error.message.includes('Invalid project URL format'), \n          'Should throw appropriate error for invalid URL');\n      }\n      \n    } catch (error) {\n      // If we don't have access to the project, that's expected\n      assert(true, 'URL resolution test completed (access may be limited)');\n    }\n  } else {\n    assert(true, 'Skipping API tests - no GITHUB_TOKEN available');\n  }\n  // Test 4: Environment variable precedence\n  const originalProjectId = process.env.PROJECT_ID;\n  const originalProjectUrl = process.env.PROJECT_URL;"}