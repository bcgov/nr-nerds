{"chunk":0,"numChunks":1,"fileHash":"8Y6jb37SiMVG08ziHAcBwifH21kU5bVX3o2NFvkFrAs=","filePath":"project-board-sync/test/verify-existing-item.test.js","content":"const test = require('node:test');\nconst assert = require('node:assert/strict');\nconst { isItemInProject } = require('../src/github/api');\nconst { loadBoardRules } = require('../src/config/board-rules');\n\ntest('Verify existing item detection works correctly', async (t) => {\n    // Set up test environment\n    const config = await loadBoardRules();\n    process.env.GITHUB_AUTHOR = config.monitoredUser;\n    // This is the PR we saw in the logs\n    const prNodeId = 'PR_kwDOHWjA886cSajx'; // This is the node ID from the logs\n    const projectId = 'PVT_kwDOAA37OM4AFuzg';\n    \n    try {\n        const result = await isItemInProject(prNodeId, projectId);\n        console.log('✅ Item in project check result:', result);\n        \n        if (result.isInProject) {\n            console.log(`✅ PR was already in project with ID: ${result.projectItemId}`);\n            assert(result.projectItemId, 'Should have a project item ID if in project');\n        } else {\n            console.log('❌ PR was not in project - this would be unexpected');\n        }\n        \n        console.log('✅ Existing item detection test completed');\n    } catch (error) {\n        console.error('❌ Error checking if item is in project:', error.message);\n        throw error;\n    }\n}); \n"}