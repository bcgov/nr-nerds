{"chunk":16,"numChunks":31,"fileHash":"d/sfK61LpWfXclxI64CLwQIr+HeWHt3JRwU/EIB4ZQc=","filePath":"project-board-sync/src/utils/state-verifier.js","content":"/**\nclass StateVerifier {\n  static async verifyCompleteState(item, projectId, expectedState) {\n    // Validate required steps\n    this.steps.validateStepCompleted('RULES_INITIALIZED');\n    const itemRef = `${item.type}#${item.number}`;\n    const totalSteps = Object.keys(expectedState).length;\n    this.progress.startOperation('Complete Verification', itemRef, totalSteps);\n    const beforeState = this.getState(item);\n    // Enhanced state transition validation\n    const validationResult = this.getTransitionValidator().validateStateTransition(\n      item,\n      beforeState,\n      expectedState,\n      { maxAssignees: 5 }\n    );\n    if (!validationResult.valid) {\n      const error = new StateVerifierError(\n        `Invalid state transition:\\n${validationResult.errors.map(e => `  - ${e}`).join('\\n')}`,\n        {\n          item,\n          currentState: beforeState,\n          expectedState,\n          isRetryable: false,\n          recoverySteps: validationResult.errors\n            .filter(e => e.recovery)\n            .map(e => e.recovery)\n        }\n      );\n      throw error;\n    }"}