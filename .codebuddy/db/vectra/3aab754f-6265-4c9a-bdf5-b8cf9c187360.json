{"chunk":6,"numChunks":12,"fileHash":"8yd4y+8BiKMN/ahRX//8mP8WbEOsfc/I+OUKnbnLr8o=","filePath":"project-board-sync/src/utils/environment-validator.js","content":"/**\nclass EnvironmentValidator {\n  static async resolveProjectFromUrl(url) {\n    try {\n      // Extract organization and project number from URL\n      const urlMatch = url.match(/^https:\\/\\/github\\.com\\/orgs\\/([^\\/]+)\\/projects\\/(\\d+)$/);\n      if (!urlMatch) {\n        throw new Error(`Invalid project URL format. Expected: https://github.com/orgs/org/projects/number`);\n      }\n      \n      const [, org, projectNumber] = urlMatch;\n      const { graphql } = require('../github/api');\n      \n      log.info(`Resolving project ID from URL: ${org}/projects/${projectNumber}`);\n      \n      const result = await graphql(`\n        query($org: String!, $number: Int!) {\n          organization(login: $org) {\n            projectV2(number: $number) {\n              id\n              title\n            }\n          }\n        }\n      `, { org, number: parseInt(projectNumber) });\n      \n      if (!result.organization?.projectV2?.id) {\n        throw new Error(`Project not found: ${org}/projects/${projectNumber}. Check the URL and ensure you have access to this project.`);\n      }\n      \n      const projectId = result.organization.projectV2.id;\n      const projectTitle = result.organization.projectV2.title;\n      \n      log.info(`âœ“ Resolved project: \"${projectTitle}\" (${projectId})`);\n      return projectId;\n      \n    } catch (error) {\n      log.error(`Project resolution error: ${error.message}`);\n      log.error(`Error stack: ${error.stack}`);\n      \n      if (error.message.includes('Project not found')) {\n        throw error;\n      } else if (error.message.includes('Invalid project URL')) {\n        throw error;\n      } else {\n        throw new Error(\n          `Failed to resolve project from URL: ${error.message}\\n` +\n          `Please check the URL is correct and you have access to the project.`\n        );\n      }\n"}