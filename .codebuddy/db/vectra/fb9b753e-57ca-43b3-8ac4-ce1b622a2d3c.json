{"chunk":2,"numChunks":18,"fileHash":"3ibgsVwMsOafH1WJCRCaWaU6kZUmrPRMlY1J54kgLQQ=","filePath":"project-board-sync/src/index.js","content":"/**\nconst { processColumnAssignment } = require('./rules/columns');\nconst { processSprintAssignment } = require('./rules/sprints');\nconst { processAssignees } = require('./rules/assignees');\nconst { processLinkedIssues } = require('./rules/linked-issues-processor');\nconst { StepVerification } = require('./utils/verification-steps');\nconst { EnvironmentValidator } = require('./utils/environment-validator');\nconst { getProjectItems } = require('./github/api');\nconst { getItemDetails } = require('./rules/assignees');\n// Initialize environment validation steps\nconst envValidator = new StepVerification([\n  'TOKEN_CONFIGURED',\n  'PROJECT_CONFIGURED',\n  'LABELS_CONFIGURED'\n]);\nenvValidator.addStepDependencies('PROJECT_CONFIGURED', [ 'TOKEN_CONFIGURED' ]);\nenvValidator.addStepDependencies('LABELS_CONFIGURED', [ 'PROJECT_CONFIGURED' ]);\n// Static reference to allow access from other modules\nStepVerification.envValidator = envValidator;\n/**\n * Validate required environment variables and return configuration\n * \n * @async\n * @returns {Promise<Object>} A configuration object containing validated environment settings\n * @throws {Error} If any required variables are missing or validation fails\n */"}