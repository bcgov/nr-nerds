{"chunk":9,"numChunks":10,"fileHash":"HPT/Ndg6W9FqXJZb751xMISbzyEQOGaKyGUEVxk0MX8=","filePath":"project-board-sync/test/state-transition-validator.test.js","content":"const { test } = require('node:test');\ntest('StateTransitionValidator', async (t) => {\n  await t.test('validates complete state transitions', async () => {\n    const validator = new StateTransitionValidator();\n    // Complete all required steps in correct order\n    validator.steps.markStepComplete('CONFIG_LOADED');\n    validator.steps.markStepComplete('DEPENDENCIES_VERIFIED');\n    validator.steps.markStepComplete('RULES_VALIDATED');\n    validator.steps.markStepComplete('CONDITIONS_DOCUMENTED');\n    validator.steps.markStepComplete('TRANSITION_VALIDATED');\n    // Set up column rules\n    validator.addColumnTransitionRule('Backlog', 'Active', []);\n    // Test item\n    const item = {\n      type: 'PullRequest',\n      number: 123,\n      projectItemId: 'item_123'\n    };\n    // Test valid complete state change\n    const validResult = validator.validateStateTransition(\n      item,\n      {\n        column: 'Backlog',\n        assignees: ['user1']\n      },\n      {\n        column: 'Active',\n        assignees: ['user1', 'user2']  // Adding assignee is allowed\n      }\n    );\n    assert.equal(validResult.valid, true, 'Should allow valid state transition');\n    // Test invalid complete state change\n    const invalidResult = validator.validateStateTransition(\n      item,\n      {\n        column: 'Backlog',\n        assignees: ['user1', 'user2']\n      },\n      {\n        column: 'Active',\n        assignees: ['user1']  // Removing assignee without explicit removal action\n      }\n    );\n    assert.equal(invalidResult.valid, false, 'Should reject invalid state transition');\n    assert(\n      invalidResult.errors[0].includes('Cannot remove assignees'),\n      'Should explain assignee removal error'\n    );\n    // Test assignee limit"}