{"chunk":2,"numChunks":3,"fileHash":"xVcrOhVwo/V70xbOImkZ1DRehQPJQhfB5vMu15C8mX4=","filePath":"project-board-sync/src/utils/status-tracker.js","content":"/**\nclass StatusTracker {\n  constructor() {\n    this.items = new Map();\n    this.stats = {\n      total: 0,\n      unchanged: 0,\n      skipped: 0,\n      changed: 0,\n      errors: 0\n    };\n  }\n  /**\n   * Record an item's processing status\n   */\n  trackItem(item, status, details = {}) {\n    const key = `${item.__typename}-${item.number}-${item.repository.nameWithOwner}`;\n    const timestamp = new Date();\n    \n    this.items.set(key, {\n      type: item.__typename,\n      number: item.number,\n      repo: item.repository.nameWithOwner,\n      status,\n      timestamp,\n      ...details\n    });\n\n    // Update stats\n    this.stats.total++;\n    this.stats[status]++;\n  }\n  /**\n   * Get summary statistics\n   */\n  getSummary() {\n    return {\n      ...this.stats,\n      items: Array.from(this.items.values())\n    };\n  }\n  /**\n   * Get items by status\n   */\n  getItemsByStatus(status) {\n    return Array.from(this.items.values())\n      .filter(item => item.status === status);\n  }\n  /**\n   * Print detailed report\n   */"}