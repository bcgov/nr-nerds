{"chunk":8,"numChunks":14,"fileHash":"BR3KeY/jHTO4rmaSfUa3V5AEhCmP6zXL1SL7tJnnCcM=","filePath":"project-board-sync/src/rules/processors/__tests__/unified-rule-processor.test.js","content":"const { test } = require('node:test');\ntest('Unified Rule Processor - All Rule Types', async (t) => {\n    await t.test('processRuleType processes column rules correctly', async () => {\n        const item = {\n            __typename: 'PullRequest',\n            number: 123,\n            column: null,\n            projectItems: { nodes: [] }\n        };\n\n        const actions = await processRuleType(item, 'columns');\n        \n        assert.equal(actions.length, 1, 'Should process one column rule');\n        assert.equal(actions[0].action, 'set_column: Active', 'Should have correct action');\n        assert.equal(actions[0].params.item, item, 'Should include item in params');\n    });\n    await t.test('processRuleType processes board_items rules correctly', async () => {\n        const item = {\n            __typename: 'PullRequest',\n            number: 123,\n            author: { login: 'test-user' },\n            projectItems: { nodes: [] }\n        };\n\n        const actions = await processRuleType(item, 'board_items');\n        \n        assert.equal(actions.length, 1, 'Should process one board_items rule');\n        assert.equal(actions[0].action, 'add_to_board', 'Should have correct action');\n        assert.equal(actions[0].params.item, item, 'Should include item in params');\n    });\n    await t.test('processRuleType processes sprint rules correctly', async () => {\n        const item = {\n            __typename: 'PullRequest',\n            number: 123,\n            column: 'Active',\n            projectItems: { nodes: [] }\n        };\n\n        const actions = await processRuleType(item, 'sprints');\n        \n        assert.equal(actions.length, 1, 'Should process one sprint rule');\n        assert.equal(actions[0].action, 'set_sprint: current', 'Should have correct action');\n        assert.equal(actions[0].params.item, item,"}