{"chunk":6,"numChunks":10,"fileHash":"JyGXkSXfqfji/jvY1IWvGDwkrzgkd6gnhZdRmuKn98M=","filePath":"project-board-sync/src/rules/add-items.js","content":"const { isItemInProject, addItemToProject, getRecentItems } = require('../github/api');\nasync function processAddItems({ org, repos, monitoredUser, projectId }) {\n  for (const item of items) {\n    try {\n      const itemIdentifier = `${item.__typename} #${item.number} (${item.repository.nameWithOwner})`;\n      log.info(`\\n🔍 Processing: ${itemIdentifier}`, true);\n      log.info(`  ├─ Author: ${item.author?.login || 'unknown'}`, true);\n      log.info(`  ├─ Repository: ${item.repository.nameWithOwner}`, true);\n      log.info(`  └─ Assignees: ${item.assignees?.nodes?.map(a => a.login).join(', ') || 'none'}\\n`, true);\n      // Log qualifying conditions\n      const isMonitoredRepo = monitoredRepos.has(item.repository.nameWithOwner);\n      const isAuthoredByUser = item.author?.login === monitoredUser;\n      const isAssignedToUser = item.assignees?.nodes?.some(a => a.login === monitoredUser) || false;\n      log.info('  Checking conditions:', true);\n      log.info(`  ├─ In monitored repo? ${isMonitoredRepo ? '✓ Yes' : '✗ No'}`, true);\n      if (item.__typename === 'PullRequest') {\n        log.info(`  ├─ Authored by ${monitoredUser}? ${isAuthoredByUser ? '✓ Yes' : '✗ No'}`, true);\n        log.info(`  └─ Assigned to ${monitoredUser}? ${isAssignedToUser ? '✓ Yes' : '✗ No'}\\n`, true);\n      }\n      // Check if we should process this item based on rules\n      const boardActions = await processBoardItemRules(item, { monitoredUser });\n      const shouldProcess = boardActions.length > 0;"}