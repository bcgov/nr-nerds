{"chunk":11,"numChunks":18,"fileHash":"3ibgsVwMsOafH1WJCRCaWaU6kZUmrPRMlY1J54kgLQQ=","filePath":"project-board-sync/src/index.js","content":"/**\nasync function main() {\n  try {\n    for (const item of addedItems) {\n      try {\n        const itemRef = `${item.type} #${item.number}`;\n        // First verify the item was added successfully\n        await StateVerifier.verifyAddition(item, context.projectId);\n        // Set initial column\n        const columnResult = await processColumnAssignment(item, item.projectItemId, context.projectId);\n        if (columnResult.changed) {\n          log.info(`Set column for ${itemRef} to ${columnResult.newStatus}`);\n          await StateVerifier.verifyColumn(item, context.projectId, columnResult.newStatus);\n        }\n        // Assign sprint if needed\n        const sprintResult = await processSprintAssignment(\n          item,\n          item.projectItemId,\n          context.projectId,\n          columnResult.newStatus || columnResult.currentStatus\n        );\n        if (sprintResult.changed) {\n          log.info(`Set sprint for ${itemRef} to ${sprintResult.newSprint}`);\n        }\n        // Handle assignees\n        const assigneeResult = await processAssignees(item, context.projectId, item.projectItemId);\n        if (assigneeResult.changed) {\n          log.info(`Updated assignees for ${itemRef}: ${assigneeResult.assignees.join(', ')}`);\n          await StateVerifier.verifyAssignees(item, context.projectId, assigneeResult.assignees);\n        }\n        // Process linked issues if it's a PR and has required properties"}