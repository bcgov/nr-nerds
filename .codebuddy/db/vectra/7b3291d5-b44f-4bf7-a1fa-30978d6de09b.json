{"chunk":0,"numChunks":14,"fileHash":"BR3KeY/jHTO4rmaSfUa3V5AEhCmP6zXL1SL7tJnnCcM=","filePath":"project-board-sync/src/rules/processors/__tests__/unified-rule-processor.test.js","content":"const { test } = require('node:test');\nconst assert = require('node:assert/strict');\n// Mock the dependencies\nconst mockConfig = {\n    rules: {\n        board_items: [{\n            name: \"Test Board Rule\",\n            trigger: {\n                type: \"PullRequest\",\n                condition: \"monitored.users.includes(item.author)\"\n            },\n            action: \"add_to_board\",\n            skip_if: \"item.inProject\"\n        }],\n        columns: [{\n            name: \"Test Column Rule\",\n            trigger: {\n                type: \"PullRequest\",\n                condition: \"!item.column\"\n            },\n            action: \"set_column\",\n            value: \"Active\",\n            skip_if: \"item.column\"\n        }],\n        sprints: [{\n            name: \"Test Sprint Rule\",\n            trigger: {\n                type: \"PullRequest\",\n                condition: \"item.column === 'Active'\"\n            },\n            action: \"set_sprint\",\n            value: \"current\",\n            skip_if: \"item.sprint === 'current'\"\n        }],\n        assignees: [{\n            name: \"Test Assignee Rule\",\n            trigger: {\n                type: \"PullRequest\",\n                condition: \"monitored.users.includes(item.author)\"\n            },\n            action: \"add_assignee\",\n            value: \"item.author\",\n            skip_if: \"item.assignees.includes(item.author)\"\n        }],\n        linked_issues: [{\n            name: \"Test Linked Issue Rule\",\n            trigger: {\n                type: \"LinkedIssue\",\n                condition: \"!item.pr.closed || item.pr.merged\"\n            },\n            action: [\"inherit_column\", \"inherit_assignees\"],\n            skip_if: \"item.column === item.pr.column && item.assignees === item.pr.assignees\"\n        }]\n    },\n    monitoredUsers: ['test-user']\n};\n// Mock the board rules module\nrequire('../../../config/board-rules').loadBoardRules = () => mockConfig;\n// Mock the validator"}