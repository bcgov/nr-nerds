{"chunk":6,"numChunks":8,"fileHash":"hKsOh/m4Sgq4KMqQOzRHKQkneoBEEeIk7iqfEPwsUBQ=","filePath":"project-board-sync/src/utils/state-changes.js","content":"/**\nclass StateChangeTracker {\n  printSummary() {\n    const { Logger } = require('./log');\n    const log = new Logger();\n    log.info('\\n📊 State Change Summary', true);\n    log.info('═══════════════════════\\n', true);\n    // Print changes per item\n    for (const [itemKey, changes] of this.changes.entries()) {\n      if (changes.length === 0) continue;\n\n      log.info(`🔄 ${itemKey}`, true);\n      for (const change of changes) {\n        const duration = (change.duration / 1000).toFixed(1);\n        log.info(`  • ${change.type} (${duration}s, ${change.attemptCount} attempts)`, true);\n        \n        // Print state differences in a readable format\n        if (typeof change.before === 'object') {\n          const diffs = this.getDiffs(change.before, change.after);\n          diffs.forEach(diff => log.info(`    ${diff}`, true));\n        } else {\n          log.info(`    ${change.before} → ${change.after}`, true);\n        }\n      }\n      log.info('', true);\n    }\n    // Print timing statistics\n    log.info('⏱️  Timing Statistics', true);\n    log.info('══════════════════\\n', true);\n    log.info(`Total Duration: ${(this.timingStats.totalDuration / 1000).toFixed(1)}s\\n`, true);"}