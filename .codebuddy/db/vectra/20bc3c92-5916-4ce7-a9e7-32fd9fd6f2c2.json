{"chunk":7,"numChunks":9,"fileHash":"1SMexQV3/cYUvQLjmTK3+MQPM8qNRYE/0C/GkyotcYE=","filePath":"project-board-sync/src/rules/processors/validation.js","content":"/**\nclass RuleValidation {\n    validateItemCondition(item, condition) {\n        try {\n            if (condition.condition === \"!item.column\") {\n                const result = !item.column || item.column === 'None';\n                log.debug(`No column check: ${item.column} -> ${result}`);\n                return result;\n            }\n            // Specific column checks\n            if (condition.condition === \"item.column === 'New'\" || \n                condition.condition === \"item.column === \\\"New\\\"\") {\n                const result = item.column === 'New';\n                log.debug(`Column check (New): ${item.column} === 'New' -> ${result}`);\n                return result;\n            }\n            if (condition.condition === \"item.column === 'Next' || item.column === 'Active'\" || \n                condition.condition === \"item.column === \\\"Next\\\" || item.column === \\\"Active\\\"\") {\n                const result = item.column === 'Next' || item.column === 'Active';\n                log.debug(`Column check (Next/Active): ${item.column} in ['Next', 'Active'] -> ${result}`);\n                return result;\n            }\n            if (condition.condition === \"item.column === 'Done'\" || \n                condition.condition === \"item.column === \\\"Done\\\"\") {\n                const result = item.column === 'Done';\n                log.debug(`Column check (Done): ${item.column} === 'Done' -> ${result}`);\n                return result;\n            }\n            if (condition.condition === \"item.column === 'Waiting'\" || \n                condition.condition === \"item.column === \\\"Waiting\\\"\") {\n                const result = item.column === 'Waiting';\n                log.debug(`Column check (Waiting): ${item.column} === 'Waiting' -> ${result}`);\n                return result;\n            }\n            // Sprint conditions"}