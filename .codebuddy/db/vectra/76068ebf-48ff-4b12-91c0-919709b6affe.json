{"chunk":3,"numChunks":6,"fileHash":"ghABHyTOQ7oC34Kt/4hGTvmGsMjkXmpueLwc8dseVzE=","filePath":"project-board-sync/CONTRIBUTING.md","content":">   trigger: item.type === 'PullRequest' && item.author === monitored.user\n>   action: add_assignee\n>   value: item.author\n> ```\n> The changes ensure author is added as assignee when they are the monitored user.\"\n\nBad PR description:\n> \"Fixed how assignees work and improved column handling\"\n\n## Automation Rules Contribution\n\n### How to Contribute to Automation Rules\n\nWe welcome contributions from anyone interested in improving or extending this automation!\n\n1. **To propose a change to the automation rules:**\n   - Open a GitHub pull request modifying `config/rules.yml`\n   - Or open a GitHub issue describing your suggestion\n   \n2. **To add your repository to the Monitored Repositories list:**\n   - Simply add your repo name to the list in `config/rules.yml`\n   - No approval requiredâ€”if it's in the list, it will be included!\n\n### Rule Adherence and Quality\n\nThe following principles must be followed to maintain strict adherence to requirements:\n\n1. **Rules Are Explicit** - If something isn't in the rules tables in `config/rules.yml`, it should not be implemented.\n2. **No Implicit Behavior** - All automation must map directly to a rule.\n3. **Test Against Rules** - Tests must verify behavior against these requirements, not implementation.\n\nIf you find yourself making assumptions about how something should work:\n1. Check if there's an explicit rule for it\n2. If not, propose an addition to `config/rules.yml` first\n3. Only implement after the rule is documented\n\n### Questions and Help\n- Tag a maintainer in an issue or discussion\n- Reach out in your team's preferred channel\n\nPlease keep our documentation clear and user-friendly for everyone. Thank you for helping make our automation better!\n\n## Testing Guidelines\n\nThis project uses Node's built-in `node:test` module. **DO NOT USE JEST.**\n\nExample of proper test mocking:\n```javascript\nconst { test } ="}