{"chunk":10,"numChunks":12,"fileHash":"8yd4y+8BiKMN/ahRX//8mP8WbEOsfc/I+OUKnbnLr8o=","filePath":"project-board-sync/src/utils/environment-validator.js","content":"/**\nclass EnvironmentValidator {\n  static async validateOptional() {\n    let rules;\n    try {\n      rules = loadBoardRules();\n    } catch (err) {\n      throw new Error(\n        'Failed to load board rules from config/rules.yml: ' + err.message + '\\n' +\n        'PROJECT_ID not provided and no project.id found in config/rules.yml. ' +\n        'Set PROJECT_ID or add project.id to config.'\n      );\n    }\n    // Check for project URL first, then direct ID, then config\n    let projectId = process.env.PROJECT_ID;\n    let projectSource = 'PROJECT_ID environment variable';\n    if (!projectId && process.env.PROJECT_URL) {\n      projectId = await this.resolveProjectFromUrl(process.env.PROJECT_URL);\n      projectSource = 'PROJECT_URL environment variable';\n    }\n    if (!projectId) {\n      // Check config for project ID or URL\n      if (rules?.project?.url) {\n        projectId = await this.resolveProjectFromUrl(rules.project.url);\n        projectSource = 'config/rules.yml project.url';\n      } else if (rules?.project?.id) {\n        projectId = rules.project.id;\n        projectSource = 'config/rules.yml project.id';\n      }\n    }"}